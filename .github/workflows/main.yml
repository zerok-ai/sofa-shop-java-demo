name: build_publish_deploy
on:
  workflow_dispatch:
    inputs:
      ENV:
        description: 'ENV'
        required: true
        default: 'poc'
      MODE:
        description: 'Sofa shop mode (mysql or ps)'
        required: true
        default: 'ps'
      APP_NAME:
        description: 'App name to be built'
        required: true
        default: 'inventory'
env:
  GOOS: ${{ vars.GOOS }}
  ENV: ${{ github.event.inputs.ENV }}
  MODE: ${{ github.event.inputs.MODE }}
  GOARCH: ${{ vars.GOARCH }}
  CGO_ENABLED: ${{ vars.CGO_ENABLED }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID:  ${{ vars.PROJECT_ID }}
  DOCKER_REPO:  ${{ vars.DOCKER_REPO }}
  APP_NAME: ${{ github.event.inputs.APP_NAME }}
  GOPRIVATE: ${{ vars.GOPRIVATE }}
  TOKEN: ${{ secrets.GITPAT }}

jobs:
  build:
    runs-on: self-hosted
    environment: ${{ github.event.inputs.ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure git for private modules
        run: git config --global url."https://$TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
          maven-version: '3.8.1'
      - name: Set up Maven
        run: mvn wrapper --quiet

      - name: Build Inventory
        working-directory: ./inventory
        run: ./mvnw clean install

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'

      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          export_default_credentials: true
      - name: login to docker registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet

      - name: Docker build
        run: |-
          docker build --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA" .

      - name: Docker push
        run: |-
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA"
