name: build_publish_deploy
on:
  workflow_dispatch:
    inputs:
      ENV:
        type: environment
        description: 'Environment'
        required: true
      MODE:
        type: choice
        description: 'Sofa shop mode (mysql or ps)'
        required: true
        default: mysql
        options:
          - ps
          - mysql
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: 'latest'
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'loadclient03'
      APP_NAME:
        type: choice
        required: true
        description: 'App name to be built'
        options:
          - none
          - inventory
          - order
          - product
          - all
      DEPLOY:
        type: boolean
        description: Do you want to deploy sofa-shop (all) as well?
env:
  GOOS: ${{ vars.GOOS }}
  ENV: ${{ github.event.inputs.ENV }}
  DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}
  MODE: ${{ github.event.inputs.MODE }}
  DEPLOY: ${{ github.event.inputs.DEPLOY }}
  GOARCH: ${{ vars.GOARCH }}
  CGO_ENABLED: ${{ vars.CGO_ENABLED }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID:  ${{ vars.PROJECT_ID }}
  DOCKER_REPO:  ${{ vars.DOCKER_REPO }}
  GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
  GKE_ZONE : ${{ vars.GKE_ZONE }}
  APP_NAME: ${{ github.event.inputs.APP_NAME }}
  GOPRIVATE: ${{ vars.GOPRIVATE }}
  TOKEN: ${{ secrets.GITPAT }}
  DB_USERNAME: ${{ secrets.DB_USERNAME_BASE64 }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD_BASE64 }}
  MYSQL_USERNAME_SECRET: ${{ secrets.MYSQL_USERNAME_BASE64 }}
  MYSQL_PASSWORD_SECRET: ${{ secrets.MYSQL_PASSWORD_BASE64 }}
  PS_USERNAME_SECRET: ${{ secrets.PS_USERNAME_BASE64 }}
  PS_PASSWORD_SECRET: ${{ secrets.PS_PASSWORD_BASE64 }}

jobs:
  inventory-build:
    runs-on: zk-self-hosted
    environment: ${{ github.event.inputs.ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: login to docker registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet
          echo $APP_NAME

      - name: Build Inventory
        working-directory: ./inventory
        if: ${{ (env.APP_NAME == 'inventory') || (env.APP_NAME == 'all') }}
        run: mvn clean install

      - name: Docker build Inventory
        working-directory: ./inventory
        if: ${{ (env.APP_NAME == 'inventory') || (env.APP_NAME == 'all') }}
        run: |-
          docker build --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/inventory:$GITHUB_SHA" .

      - name: Docker Tag Inventory
        if: ${{ (env.APP_NAME == 'inventory') || (env.APP_NAME == 'all') }}
        run: |-
          docker tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/inventory:$GITHUB_SHA" "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/inventory:$DOCKER_TAG"

      - name: Docker push Inventory
        working-directory: ./inventory
        if: ${{ (env.APP_NAME == 'inventory') || (env.APP_NAME == 'all') }}
        run: |-
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/inventory:$GITHUB_SHA"
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/inventory:$DOCKER_TAG"

  product-build:
    runs-on: zk-self-hosted
    environment: ${{ github.event.inputs.ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: login to docker registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet
          echo $APP_NAME

      - name: Build Product
        working-directory: ./product
        if: ${{ (env.APP_NAME == 'product') || (env.APP_NAME == 'all') }}
        run: mvn clean install

      - name: Docker build Product
        working-directory: ./product
        if: ${{ (env.APP_NAME == 'product') || (env.APP_NAME == 'all') }}
        run: |-
          docker build --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/product:$GITHUB_SHA" .

      - name: Docker Tag Product
        if: ${{ (env.APP_NAME == 'product') || (env.APP_NAME == 'all') }}
        run: |-
          docker tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/product:$GITHUB_SHA" "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/product:$DOCKER_TAG"

      - name: Docker push Product
        working-directory: ./product
        if: ${{ (env.APP_NAME == 'product') || (env.APP_NAME == 'all') }}
        run: |-
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/product:$GITHUB_SHA"
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/product:$DOCKER_TAG"

  order-build:
    runs-on: zk-self-hosted
    environment: ${{ github.event.inputs.ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: login to docker registry
        run: |
          gcloud auth configure-docker $DOCKER_REG --quiet
          echo $APP_NAME

      - name: Build Order
        working-directory: ./order
        if: ${{ (env.APP_NAME == 'order') || (env.APP_NAME == 'all') }}
        run: mvn clean install

      - name: Docker build Order
        working-directory: ./order
        if: ${{ (env.APP_NAME == 'order') || (env.APP_NAME == 'all') }}
        run: |-
          docker build --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/order:$GITHUB_SHA" .

      - name: Docker Tag Order
        if: ${{ (env.APP_NAME == 'order') || (env.APP_NAME == 'all') }}
        run: |-
          docker tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/order:$GITHUB_SHA" "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/order:$DOCKER_TAG"

      - name: Docker push Order
        working-directory: ./order
        if: ${{ (env.APP_NAME == 'order') || (env.APP_NAME == 'all') }}
        run: |-
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/order:$GITHUB_SHA"
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/order:$DOCKER_TAG"
  

  deploy-all:
    needs: [ inventory-build,product-build,order-build ]
    runs-on: zk-self-hosted
    environment: ${{ github.event.inputs.ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Deploy
        working-directory: ./
        if: ${{ env.DEPLOY == 'true' }}
        run: MODE=$MODE MYSQL_USERNAME_SECRET=$MYSQL_USERNAME_SECRET MYSQL_PASSWORD_SECRET=$MYSQL_PASSWORD_SECRET PS_USERNAME_SECRET=$PS_USERNAME_SECRET PS_PASSWORD_SECRET=$PS_PASSWORD_SECRET ./setup.sh